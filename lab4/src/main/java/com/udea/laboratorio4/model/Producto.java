/**
 * This file was generated by the Jeddict
 */
package com.udea.laboratorio4.model;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

/**
 * @author paralelos
 */
@Entity
@NamedQueries({
    @NamedQuery(name = "Producto.findAll", query = "Select e from Producto e")
    ,@NamedQuery(name = "Producto.findByNombre", query = "Select e from Producto e where e.nombre=:nombre")
    ,@NamedQuery(name = "Producto.findByPrecio", query = "Select e from Producto e where e.precio=:precio")
    ,@NamedQuery(name = "Producto.findByCantidadDisponible", query = "Select e from Producto e where e.cantidadDisponible=:cantidadDisponible")
    ,@NamedQuery(name = "Producto.findByFechaIngreso", query = "Select e from Producto e where e.fechaIngreso=:fechaIngreso")
    ,@NamedQuery(name = "Producto.findByValido", query = "Select e from Producto e where e.valido=:valido")
})
public class Producto implements Serializable {

    @Column(name = "id", unique = true, nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @NotNull(message = "Debe ingresar el id.")
    private Long id;

    @Column(name = "nombre", nullable = false)
    @Basic
    private String nombre;

    @Column(name = "precio", nullable = false)
    @Basic
    private double precio;

    @Column(name = "cantidadDisponible", nullable = false)
    @Basic
    @NotNull(message = "Debe ingresar el valor.")
    private int cantidadDisponible;

    @Column(name = "fechaIngreso", nullable = false)
    @Basic
    @Temporal(TemporalType.DATE)
    @NotNull(message = "Debe ingresar la fecha")
    private Date fechaIngreso;

    @Column(nullable = false)
    @Basic
    @NotNull(message = "No se puede dejar el valor vac√≠o.")
    private boolean valido;

    @ManyToOne(targetEntity = TipoProducto.class)
    private TipoProducto tipoProducto;

    public Producto(Long id, String nombre, double precio, int cantidadDisponible, Date fechaIngreso, boolean valido, TipoProducto tipoProducto) {
        this.id = id;
        this.nombre = nombre;
        this.precio = precio;
        this.cantidadDisponible = cantidadDisponible;
        this.fechaIngreso = fechaIngreso;
        this.valido = valido;
        this.tipoProducto = tipoProducto;
    }

    public Producto() {
    }

    public Producto(Long id, String nombre, double precio, int cantidadDisponible, Date fechaIngreso, boolean valido) {
        this.id = id;
        this.nombre = nombre;
        this.precio = precio;
        this.cantidadDisponible = cantidadDisponible;
        this.fechaIngreso = fechaIngreso;
        this.valido = valido;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public double getPrecio() {
        return this.precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    public int getCantidadDisponible() {
        return this.cantidadDisponible;
    }

    public void setCantidadDisponible(int cantidadDisponible) {
        this.cantidadDisponible = cantidadDisponible;
    }

    public Date getFechaIngreso() {
        return this.fechaIngreso;
    }

    public void setFechaIngreso(Date fechaIngreso) {
        this.fechaIngreso = fechaIngreso;
    }

    public boolean isValido() {
        return this.valido;
    }

    public void setValido(boolean valido) {
        this.valido = valido;
    }

    public TipoProducto getTipoProducto() {
        return this.tipoProducto;
    }

    public void setTipoProducto(TipoProducto tipoProducto) {
        this.tipoProducto = tipoProducto;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {
            return false;
        }
        final Producto other = (Producto) obj;
        if (!java.util.Objects.equals(this.getId(), other.getId())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 79 * hash + (this.getId() != null ? this.getId().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "Producto{" + " id=" + id + ", nombre=" + nombre + ", precio=" + precio + ", cantidadDisponible=" + cantidadDisponible + ", fechaIngreso=" + fechaIngreso + ", valido=" + valido + ", tipoProducto=" + tipoProducto + '}';
    }

}