/**
 * This file was generated by the Jeddict
 */
package com.udea.laboratorio4.model;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

/**
 * @author paralelos
 */
@Entity
@NamedQueries({
    @NamedQuery(name = "TipoProducto.findAll", query = "Select e from TipoProducto e")
    ,@NamedQuery(name = "TipoProducto.findByTipoProducto", query = "Select e from TipoProducto e where e.tipoProducto=:tipoProducto")
})
public class TipoProducto implements Serializable {

    @Column(name = "id", unique = true, nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @NotNull(message = "El valor es obligatorio.")
    private Long id;

    @Column(nullable = false)
    @Basic
    private String tipoProducto;

    @OneToMany(targetEntity = Producto.class, mappedBy = "tipoProducto")
    private List<Producto> productos;

    public TipoProducto(Long id, String tipoProducto) {
        this.id = id;
        this.tipoProducto = tipoProducto;
    }

    public TipoProducto() {
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getTipoProducto() {
        return this.tipoProducto;
    }

    public void setTipoProducto(String tipoProducto) {
        this.tipoProducto = tipoProducto;
    }

    public List<Producto> getProductos() {
        return this.productos;
    }

    public void setProductos(List<Producto> productos) {
        this.productos = productos;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {
            return false;
        }
        final TipoProducto other = (TipoProducto) obj;
        if (!java.util.Objects.equals(this.getId(), other.getId())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 19 * hash + (this.getId() != null ? this.getId().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "TipoProducto{" + " id=" + id + ", tipoProducto=" + tipoProducto + '}';
    }

}